name: Apply changes to Production

on:
  # push:
  #   branches:
  #     - production
  pull_request:
    branches:
      - production
    types: [closed]
    if: github.event.pull_request.merged == true

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create frontend .env.production
        run: |
          cat <<EOF > frontend/.env.production
          VITE_ENV=${{ vars.VITE_ENV }}
          VITE_API_URL=${{ vars.VITE_API_URL }}
          EOF

      - name: Run apply script
        env:
          TF_VAR_hosted_zone_id: ${{ secrets.TF_VAR_HOSTED_ZONE_ID }}
          TF_VAR_cloudfront_acm_certificate_arn: ${{ secrets.TF_VAR_ACM_CERTIFICATE_ARN }}
          TF_VAR_backend_image_url: ${{ vars.TF_VAR_BACKEND_IMAGE_URL }}
        run: |
          cd ./devops
          chmod +x apply.sh
          ./apply.sh
